// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
  BANNED
}

enum Resolution {
  x32
  x64
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("users_accounts")
}

model Modpack {
  id          String           @id @default(cuid())
  authors     String[]
  name        String
  image       String?
  description String?
  versions    ModpackVersion[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("modpacks")
}

model ModpackVersion {
  id        String       @id @default(cuid())
  version   String
  modpack   Modpack      @relation(fields: [modpackId], references: [id])
  modpackId String       @map("modpack_id")
  mods      ModVersion[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("modpacks_versions")
}

model Mod {
  id          String       @id @default(cuid())
  forgeId     String?      @map("forge_id")
  name        String
  description String?
  image       String?
  versions    ModVersion[]
  authors     String[]
  url         String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("mods")
}

model ModVersion {
  id        String     @id @default(cuid())
  version   String
  mcVersion String     @map("minecraft_version")
  mod       Mod        @relation(fields: [modId], references: [id])
  modId     String     @map("mod_id")
  resources Resource[]

  ModpackVersion ModpackVersion[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("mods_versions")
}

model Resource {
  id           String     @id @default(cuid())
  assetFolder  String     @map("asset_folder")
  modVersionId String     @map("mod_version_id")
  mod          ModVersion @relation(fields: [modVersionId], references: [id])

  textures LinkedTexture[]
  // blockModels  LinkedBlockModel[]
  // itemModels   LinkedItemModel[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([assetFolder, modVersionId])
  @@map("resources")
}

model Texture {
  id             String          @id @default(cuid())
  name           String
  contributions  Contribution[]
  filepath       String
  hash           String          @unique
  linkedTextures LinkedTexture[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("textures")
}

model LinkedTexture {
  id        String @id @default(cuid())
  assetPath String @map("asset_path")

  textureId String  @map("texture_id")
  texture   Texture @relation(fields: [textureId], references: [id])

  Resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("linked_textures")
}

// model BlockModel {
//   id            String         @id @default(cuid())
//   name          String
//   contributions Contribution[]
//   json          String
//   resourceId    String         @map("resource_id")
//   resource      Resource       @relation(fields: [resourceId], references: [id])

//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")

//   @@map("block_models")
// }

// model ItemModel {
//   id            String         @id @default(cuid())
//   name          String
//   contributions Contribution[]
//   json          String
//   resourceId    String         @map("resource_id")
//   resource      Resource       @relation(fields: [resourceId], references: [id])

//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")

//   @@map("item_models")
// }

model Contribution {
  id         String     @id @default(cuid())
  file       String
  date       DateTime   @default(now())
  users      User[]
  resolution Resolution
  status     Status

  pollId String
  poll   Poll   @relation(fields: [pollId], references: [id])

  Texture   Texture? @relation(fields: [textureId], references: [id])
  textureId String?

  // blockModel   BlockModel? @relation(fields: [blockModelId], references: [id])
  // blockModelId String?

  // itemModel   ItemModel? @relation(fields: [itemModelId], references: [id])
  // itemModelId String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users_contributions")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?      @map("email_verified")
  image         String?
  role          UserRole       @default(USER)
  accounts      Account[]
  contributions Contribution[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  pollsUpvoted   Poll[] @relation("Upvotes")
  pollsDownvoted Poll[] @relation("Downvotes")

  @@map("users")
}

model Poll {
  id        String @id @default(cuid())
  upvotes   User[] @relation("Upvotes")
  downvotes User[] @relation("Downvotes")

  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  Contribution Contribution[]

  @@map("users_polls")
}
